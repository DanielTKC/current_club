openapi: 3.0.3
info:
  title: KC Current Club Suite Selector
  version: 1.0.0
  description: An API to help soccer fans celebrate their favorite team
paths:
  /api/api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/matches/:
    get:
      operationId: matches_list
      tags:
      - matches
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
          description: ''
    post:
      operationId: matches_create
      tags:
      - matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Match'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
  /api/matches/{id}/:
    get:
      operationId: matches_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - matches
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
    put:
      operationId: matches_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Match'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Match'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
    patch:
      operationId: matches_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMatch'
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
    delete:
      operationId: matches_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - matches
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/register/:
    post:
      operationId: register_create
      description: This is where we create the User.
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/reservations/:
    get:
      operationId: reservations_list
      tags:
      - reservations
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
          description: ''
    post:
      operationId: reservations_create
      tags:
      - reservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
  /api/reservations/{id}/:
    get:
      operationId: reservations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    put:
      operationId: reservations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    patch:
      operationId: reservations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    delete:
      operationId: reservations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/suites/:
    get:
      operationId: suites_list
      tags:
      - suites
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Suite'
          description: ''
    post:
      operationId: suites_create
      tags:
      - suites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Suite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Suite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Suite'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suite'
          description: ''
  /api/suites/{id}/:
    get:
      operationId: suites_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this suite.
        required: true
      tags:
      - suites
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suite'
          description: ''
    put:
      operationId: suites_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this suite.
        required: true
      tags:
      - suites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Suite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Suite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Suite'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suite'
          description: ''
    patch:
      operationId: suites_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this suite.
        required: true
      tags:
      - suites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSuite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSuite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSuite'
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suite'
          description: ''
    delete:
      operationId: suites_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this suite.
        required: true
      tags:
      - suites
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Match:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        opponent:
          type: string
          maxLength: 255
        match_date:
          type: string
          format: date-time
        location:
          type: string
          maxLength: 255
        match_image:
          type: string
          format: uri
          nullable: true
        formatted_match_date:
          type: string
          readOnly: true
        formatted_match_time:
          type: string
          readOnly: true
        available_suites:
          type: string
          readOnly: true
      required:
      - available_suites
      - formatted_match_date
      - formatted_match_time
      - id
      - match_date
      - opponent
    PatchedMatch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        opponent:
          type: string
          maxLength: 255
        match_date:
          type: string
          format: date-time
        location:
          type: string
          maxLength: 255
        match_image:
          type: string
          format: uri
          nullable: true
        formatted_match_date:
          type: string
          readOnly: true
        formatted_match_time:
          type: string
          readOnly: true
        available_suites:
          type: string
          readOnly: true
    PatchedReservation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        suite:
          type: string
          format: uri
        match:
          type: string
          format: uri
        reservation_date:
          type: string
          format: date-time
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          readOnly: true
    PatchedSuite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        suite_photo:
          type: string
          format: uri
          nullable: true
        description:
          type: string
        is_sold_out:
          type: boolean
          readOnly: true
          default: false
    Reservation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        suite:
          type: string
          format: uri
        match:
          type: string
          format: uri
        reservation_date:
          type: string
          format: date-time
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - id
      - match
      - reservation_date
      - suite
      - total_price
      - user
    Suite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        suite_photo:
          type: string
          format: uri
          nullable: true
        description:
          type: string
        is_sold_out:
          type: boolean
          readOnly: true
          default: false
      required:
      - capacity
      - id
      - is_sold_out
      - name
      - price
    UserRegistration:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        address:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        zip_code:
          type: string
          maxLength: 10
        phone_number:
          type: string
          maxLength: 20
      required:
      - address
      - city
      - email
      - password
      - phone_number
      - state
      - zip_code
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
